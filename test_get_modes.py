from proj07 import get_modes

print("Case 1: All have one mode")
data = [[('1/1/1948', None, 26.0, 22.0, 0.84, 3.1, 3.0), ('1/2/1948', None, 27.0, 22.2, 0.09, 0.9, 5.0),  ('12/25/2022', 17.0, 18.0, 13.0, 0.01, 0.4, 9.0), ('12/25/2020', 17.0, 18.0, 22.4, 0.01, 0.4, 9.0),('11/18/2022', 28.0, 26.4, 22.0, 0.12, 2.6, 5.0)], 
[('11/17/2000', 31.0, 34.0, 28.0, 0.0, 0.1, None), ('11/18/2000', 29.0, 35.0, -26.0, 0.0, None, None), ('11/19/2000', 33.0, 43.0, 20.0, 0.02, None, None), ('11/20/2000', 25.0, 29.0, -26.0, 0.0, 0.3, 0.0), ('12/25/2020', 17.0, 18.0, 22.4, 0.01, 0.4, 9.0),('11/18/2022', 28.0, 22.0, -26.47, 0.12, 2.6, 5.0),('12/25/2022', 17.0, 18.0, -26.32, 0.01, 0.4, 9.0),('11/25/2022', 17.0, 18.0, -25.97, 0.01, 0.4, 9.0)]]
cities = ['NY', 'LA']
col = 3
print("data:",data)
print("cities:",cities)
print("column #:",col)
instructor = [('NY', [22.0], 4), ('LA', [-26.47], 5)]
print("Instructor:")
print(instructor)
student = get_modes(col,data,cities)
print("Student:")
print(student)
assert student == instructor

print("\n"+"-"*20)
print("Case 2: all have multiple modes")
data = [[('1/1/1948', None, 26.0, 22.0, 0.84, 3.1, 3.0), ('1/2/1948', None, 27.0, 23.2, 0.09, 0.9, 5.0),  ('12/25/2022', 17.0, 18.0, 13.0, 0.01, 0.4, 9.0), ('12/25/2020', 17.0, 18.0, 22.4, 0.01, 0.4, 9.0),('11/18/2022', 28.0, 26.4, 13.17, 0.12, 2.6, 5.0)], 
[('11/17/2000', 31.0, 34.0, 28.0, 0.0, 0.1, None), ('11/18/2000', 29.0, 35.0, -26.0, 0.0, None, None), ('11/19/2000', 33.0, 43.0, 22.0, 0.02, None, None), ('11/20/2000', 25.0, 29.0, -25.0, 0.0, 0.3, 0.0), ('12/25/2020', 17.0, 18.0, 22.4, 0.01, 0.4, 9.0),('11/18/2022', 28.0, 22.0, -26.47, 0.12, 2.6, 5.0),('12/25/2022', 17.0, 18.0, 22.0, 0.01, 0.4, 9.0),('11/25/2022', 17.0, 18.0, -25.97, 0.01, 0.4, 9.0)]]
col = 3
cities = ['CA', 'TX']
print("data:",data)
print("cities:",cities)
print("column #:",col)
instructor = [('CA', [13.0, 22.0], 2), ('TX', [-26.47, 22.0], 3)]
print("Instructor:")
print(instructor)
student = get_modes(col,data,cities)
print("Student:")
print(student)
assert student == instructor

print("\n"+"-"*20)
print("Case 3: all have no modes")
data = [[('1/1/1948', None, 26.0, 22.0, 0.84, 3.1, 3.0), ('1/2/1948', None, 27.0, 22.0, 0.09, 0.9, 5.0), ('11/18/2022', 28.0, 31.0, 22.0, 0.12, 2.6, 5.0), ('12/25/2022', 17.0, 18.0, 13.0, 0.01, 0.4, 9.0)], 
[('11/17/2000', 31.0, 34.0, 28.0, 0.0, 0.1, None), ('11/18/2000', 29.0, 35.0, 23.0, 0.0, None, None), ('11/19/2000', 33.0, 43.0, 23.0, 0.02, None, None), ('11/20/2000', 25.0, 29.0, 20.0, 0.0, 0.3, 0.0)]]
cities = ['lansing_small', 'chicago_small']
col = 5
print("data:",data)
print("cities:",cities)
print("column #:",col)
instructor = [('lansing_small', [], 1), ('chicago_small', [], 1)]
print("Instructor:")
print(instructor)
student = get_modes(col,data,cities)
print("Student:")
print(student)
assert student == instructor

print("\n"+"-"*20)
print("Case 4: mixtures of number of modes")
data = [[('1/1/1948', None, 26.0, 22.5, 0.84, 3.1, 3.0), ('1/2/1948', None, 27.0, 22.0, 0.09, 0.9, 5.0), ('11/18/2022', 28.0, 31.0, 28.0, 0.12, 2.6, 5.0), ('12/25/2022', 17.0, 18.0, 13.0, 0.01, 0.4, 9.0)], [('1/1/1948', None, 26.0, 22.0, 0.84, 3.1, 3.0), ('1/2/1948', None, 27.0, 23.2, 0.09, 0.9, 5.0),  ('12/25/2022', 17.0, 18.0, 13.0, 0.01, 0.4, 9.0), ('12/25/2020', 17.0, 18.0, 22.4, 0.01, 0.4, 9.0),('11/18/2022', 28.0, 26.4, 13.17, 0.12, 2.6, 5.0)],
[('11/17/2000', 31.0, 34.0, 28.0, 0.0, 0.1, None), ('11/18/2000', 29.0, 35.0, -26.0, 0.0, None, None), ('11/19/2000', 33.0, 43.0, 20.0, 0.02, None, None), ('11/20/2000', 25.0, 29.0, -26.0, 0.0, 0.3, 0.0), ('12/25/2020', 17.0, 18.0, 22.4, 0.01, 0.4, 9.0),('11/18/2022', 28.0, 22.0, -26.47, 0.12, 2.6, 5.0),('12/25/2022', 17.0, 18.0, -26.32, 0.01, 0.4, 9.0),('11/25/2022', 17.0, 18.0, -25.97, 0.01, 0.4, 9.0)]]
cities = ['FL', 'CA', 'MI']
col = 3
print("data:",data)
print("cities:",cities)
print("column #:",col)
instructor = [('FL', [], 1), ('CA', [13.0, 22.0], 2), ('MI', [-26.47], 5)]
print("Instructor:")
print(instructor)
student = get_modes(col,data,cities)
print("Student:")
print(student)
assert student == instructor
